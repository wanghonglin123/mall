#druid datasouce database settings begin
# dataSource 类型 为阿里巴巴连接池， druid
spring.druid.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 数据驱动类
spring.druid.datasource.driverClassName=com.mysql.jdbc.Driver

#连接数据库的url，不同数据库不一样。例如：
#mysql : jdbc:mysql://10.20.153.104:3306/druid2
#oracle : jdbc:oracle:thin:@10.20.149.85:1521:ocnauto
# home
#spring.druid.datasource.url=jdbc:mysql://localhost:3306/sb-member?characterEncoding=UTF-8

# 公司
spring.druid.datasource.url=jdbc:mysql://192.168.247.128:3306/mall?characterEncoding=utf-8

# 数据库用户名
#spring.druid.datasource.username=root
spring.druid.datasource.username=root

# 数据库密码
#spring.druid.datasource.password=123456
spring.druid.datasource.password=123456

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.druid.datasource.initialSize=5

# 最小连接池数量
spring.druid.datasource.minIdle=5

# 最大连接池数量
spring.druid.datasource.maxActive=20

# 配置获取连接等待超时的时间
spring.druid.datasource.maxWait=60000

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.druid.datasource.timeBetweenEvictionRunsMillis=60000

# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.druid.datasource.minEvictableIdleTimeMillis=300000

# 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.druid.datasource.validationQuery=SELECT 1 FROM DUAL

# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.druid.datasource.testWhileIdle=true

# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。所以设置为false
spring.druid.datasource.testOnBorrow=false

# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。所以设置为false
spring.druid.datasource.testOnReturn=false

# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
# 目前使用的是Mysql 所以设置为false
spring.druid.datasource.poolPreparedStatements=false

# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStateme,Oracle 需要开启，有助于性能提升
spring.druid.datasource.maxOpenPreparedStatements=-1

#配置监控统计拦截的filters，
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat
#日志用的filter:log4j
#防御sql注入的filter:wall
spring.druid.datasource.filters=stat

#支持Emoji表情的解决方案
spring.druid.datasource.connectionInitSqls=set names utf8mb4;
